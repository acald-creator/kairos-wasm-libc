load("@org_cloudabi_bazel_toolchains_cloudabi//:cc.bzl", "cc_test_cloudabi")

cc_library(
    name = "string",
    srcs = [
        "memccpy.c",
        "memchr.c",
        "memcmp.c",
        "memmem.c",
        "memmove.c",
        "memrchr.c",
        "memset.c",
        "stpcpy.c",
        "stpncpy.c",
        "strcat.c",
        "strchr.c",
        "strcmp.c",
        "strcoll.c",
        "strcoll_l.c",
        "strcpy.c",
        "strcspn.c",
        "strdup.c",
        "strerror.c",
        "strerror_l.c",
        "strerror_r.c",
        "string_impl.h",
        "strlcat.c",
        "strlcpy.c",
        "strlen.c",
        "strncat.c",
        "strncmp.c",
        "strncpy.c",
        "strndup.c",
        "strnlen.c",
        "strpbrk.c",
        "strrchr.c",
        "strsep.c",
        "strsignal.c",
        "strsignal_l.c",
        "strspn.c",
        "strstr.c",
        "strtok_r.c",
        "strverscmp.c",
        "strxfrm.c",
        "strxfrm_l.c",
    ],
    visibility = ["//src/libc:__pkg__"],
    deps = ["//src/common"],
)

[cc_test_cloudabi(
    name = test + "_test",
    srcs = [test + "_test.cc"],
    # Disable warnings for zero-sized memset() calls. These need to be
    # tested, regardless of how silly those are.
    copts = ["-Wno-memset-transposed-args"],
    deps = ["@com_google_googletest//:gtest_main"],
) for test in [
    "memccpy",
    "memchr",
    "memcmp",
    "memcpy",
    "memmem",
    "memmove",
    "memrchr",
    "memset",
    "stpcpy",
    "stpncpy",
    "strcat",
    "strchr",
    "strcmp",
    "strcpy",
    "strcspn",
    "strdup",
    "strerror",
    "strerror_r",
    "strlcat",
    "strlcpy",
    "strlen",
    "strncat",
    "strncmp",
    "strncpy",
    "strndup",
    "strnlen",
    "strpbrk",
    "strrchr",
    "strsep",
    "strsignal",
    "strspn",
    "strstr",
    "strtok_r",
    "strverscmp",
]]
